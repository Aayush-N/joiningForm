# Generated by Django 2.0.5 on 2018-06-03 11:17

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('image', models.FileField(upload_to='uploads/')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('phone', models.CharField(blank=True, max_length=15, null=True, verbose_name='Phone')),
                ('position', models.CharField(blank=True, max_length=20, null=True)),
                ('department', models.CharField(blank=True, max_length=50, null=True)),
                ('fathers_name', models.CharField(blank=True, max_length=50, null=True)),
                ('address', models.CharField(blank=True, max_length=50, null=True)),
                ('permanent_address', models.CharField(blank=True, max_length=50, null=True)),
                ('date_of_birth', models.DateField(max_length=8)),
                ('age', models.IntegerField()),
                ('place', models.CharField(blank=True, max_length=50, null=True)),
                ('religion', models.CharField(blank=True, max_length=50, null=True)),
                ('reservation', models.CharField(blank=True, max_length=50, null=True)),
                ('category', models.CharField(blank=True, max_length=50, null=True)),
                ('nationality', models.CharField(blank=True, max_length=50, null=True)),
                ('family_members', models.IntegerField(default=0)),
                ('kannada_speak', models.BooleanField(default=False)),
                ('kannada_read', models.BooleanField(default=False)),
                ('kannada_write', models.BooleanField(default=False)),
                ('english_speak', models.BooleanField(default=False)),
                ('english_read', models.BooleanField(default=False)),
                ('english_write', models.BooleanField(default=False)),
                ('hindi_speak', models.BooleanField(default=False)),
                ('hindi_read', models.BooleanField(default=False)),
                ('hindi_write', models.BooleanField(default=False)),
                ('grade', models.CharField(blank=True, max_length=50, null=True, verbose_name='grade')),
                ('no_member', models.CharField(blank=True, max_length=50, null=True, verbose_name='members')),
                ('year_selection', models.CharField(blank=True, max_length=50, null=True, verbose_name='year selection')),
                ('neft', models.CharField(blank=True, max_length=50, null=True, verbose_name='NEFT')),
                ('uti', models.CharField(blank=True, max_length=35, null=True, verbose_name='UTI')),
                ('Date', models.CharField(blank=True, max_length=35, null=True, verbose_name='Date')),
                ('Amount', models.CharField(blank=True, max_length=35, null=True, verbose_name='Amount')),
                ('Bank', models.CharField(blank=True, max_length=35, null=True, verbose_name='Bank')),
                ('Branch', models.CharField(blank=True, max_length=35, null=True, verbose_name='Branch')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
                'verbose_name_plural': 'users',
                'verbose_name': 'user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ApplyPositions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Awards',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Spec_awards_particulars', models.CharField(max_length=50, verbose_name='Particulars')),
                ('state', models.CharField(max_length=50, verbose_name='State')),
                ('national', models.CharField(max_length=50, verbose_name='National')),
                ('international', models.CharField(max_length=50, verbose_name='International')),
                ('faculty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Conference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('conf_conducted_org', models.CharField(max_length=50, verbose_name='organisation')),
                ('total_experience', models.CharField(max_length=50, verbose_name='experience')),
                ('university', models.CharField(max_length=50, verbose_name='university')),
                ('designation', models.CharField(max_length=50, verbose_name='designationsi')),
                ('from_date', models.CharField(max_length=50, null=True, verbose_name='from')),
                ('to_date', models.CharField(max_length=50, null=True, verbose_name='to')),
                ('total_duration', models.CharField(max_length=50, null=True, verbose_name='total duration')),
                ('faculty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Specialisation', models.CharField(max_length=50)),
                ('Institution_Name', models.CharField(max_length=50)),
                ('Passing_Year', models.CharField(max_length=50)),
                ('Percent_or_grade', models.CharField(max_length=50)),
                ('maximum_marks_or_grade', models.CharField(max_length=50)),
                ('file_upload', models.FileField(upload_to='uploads/')),
                ('Applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Declaration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('signature', models.FileField(upload_to='uploads/')),
            ],
        ),
        migrations.CreateModel(
            name='Degree',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='DocumentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_of_document', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='DocumentUpload',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='uploads/')),
                ('type_of_document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.DocumentType')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='IndustrialExperience',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organisation', models.CharField(max_length=50, verbose_name='organisation')),
                ('position_held', models.CharField(max_length=50, verbose_name='position held')),
                ('from_date', models.CharField(max_length=50, verbose_name='from date')),
                ('to_date', models.CharField(max_length=50, verbose_name='to date')),
                ('experience_years', models.CharField(max_length=50, verbose_name='experience years')),
                ('faculty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Membership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_of_member', models.CharField(max_length=50, null=True)),
                ('professional_body', models.CharField(max_length=50, null=True)),
                ('membership_no', models.CharField(max_length=50, null=True)),
                ('annual', models.CharField(max_length=50)),
                ('faculty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Positions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='Proficiency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('proficiency', models.CharField(max_length=50, verbose_name='proficiency')),
            ],
        ),
        migrations.CreateModel(
            name='Referral',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='name')),
                ('position', models.CharField(max_length=50, verbose_name='position')),
                ('designation', models.CharField(max_length=50, verbose_name='designation')),
                ('affiliation', models.CharField(max_length=50, verbose_name='affiliation')),
                ('contact_no', models.CharField(max_length=50, verbose_name='contact no')),
                ('email', models.CharField(max_length=50, verbose_name='email')),
                ('address', models.CharField(max_length=50, verbose_name='address')),
                ('faculty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Research',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_experience', models.CharField(max_length=50)),
                ('university_name', models.CharField(max_length=50)),
                ('area_reasearch', models.CharField(max_length=50)),
                ('from_date', models.CharField(max_length=50)),
                ('to_date', models.CharField(max_length=50)),
                ('total_duration', models.CharField(max_length=50)),
                ('total_internationalConf', models.CharField(max_length=50)),
                ('title_paper', models.CharField(max_length=50)),
                ('conf_International', models.CharField(max_length=50)),
                ('year_month_pub', models.CharField(max_length=50)),
                ('faculty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SpecialAchievement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('community_service', models.CharField(blank=True, max_length=250, null=True, verbose_name='community services')),
                ('industry_related', models.CharField(blank=True, max_length=50, null=True, verbose_name='industry related')),
                ('university_assignment', models.CharField(blank=True, max_length=50, null=True, verbose_name='university assignment')),
                ('administration', models.CharField(blank=True, max_length=50, null=True, verbose_name='administration')),
                ('faculty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TeachingExperience',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('university_name', models.CharField(max_length=50, null=True)),
                ('designation', models.CharField(max_length=50, null=True)),
                ('from_date', models.CharField(max_length=50, verbose_name='from')),
                ('to_date', models.CharField(max_length=50, verbose_name='to')),
                ('total_duration', models.CharField(max_length=50, verbose_name='total duration')),
                ('faculty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='course',
            name='Degree',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Degree'),
        ),
        migrations.AddField(
            model_name='applypositions',
            name='name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Positions'),
        ),
    ]
